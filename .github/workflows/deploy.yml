name: Build and Deploy

on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  setup:
    name: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup
        uses: actions/setup-node@v1
        with:
          node-version: "10.x"
      - name: Cache Node Modules
        uses: actions/cache@v2
        id: cache-npm
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install
        if: steps.cache-npm.outputs.cache-hit != 'true'
        run: npm install

  build:
    name: build
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup
        uses: actions/setup-node@v1
        with:
          node-version: "10.x"

      - name: Cache Node Modules
        uses: actions/cache@v2
        id: cache-npm
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install
        if: steps.cache-npm.outputs.cache-hit != 'true'
        run: npm install

      - name: Build
        run: npm run build

      - name: Upload Build
        if: |
          contains(github.ref, 'refs/heads/next')
          || contains(github.ref, 'refs/heads/master')
          || contains(github.ref, 'refs/heads/next-major')
          || contains(github.ref, 'refs/heads/beta')
        uses: actions/upload-artifact@v1
        with:
          name: build
          path: public
  deploy:
    name: deploy
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup
        uses: actions/setup-node@v1
        with:
          node-version: "10.x"
      - name: Download Build
        uses: actions/download-artifact@v1
        with:
          name: build

  notify:
    name: Notify
    runs-on: ubuntu-latest
    if: failure()
    needs:
      - build
      - setup
    steps:
      - uses: technote-space/workflow-conclusion-action@v1
      - name: Notify Discord
        uses: rjstone/discord-webhook-notify@v1
        if: failure()
        with:
          severity: error
          details: Pipeline Failed
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
    # - run: echo DATO_CMS_API_KEY=${{ secrets.DATO_CMS_API_KEY }} > .env
    # - uses: enriikke/gatsby-gh-pages-action@v2
    #   with:
    #     access-token: ${{ secrets.ACCESS_TOKEN }}
    #     deploy-branch: gh-pages
